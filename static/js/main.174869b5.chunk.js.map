{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","searchField","type","value","onChange","App","useState","setMonsters","setSearchField","searchResults","setSearchResults","useEffect","fetch","then","resp","json","response","catch","err","console","log","results","filter","toLowerCase","includes","toLocaleLowerCase","event","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAGaA,G,MAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAML,EAAMG,QAAQG,OACpB,4BAAKN,EAAMG,QAAQI,aCHdC,G,MAAW,SAAAR,GAAK,OAC5B,qBAAKC,UAAU,YAAf,SAEOD,EAAMS,SAASC,KACX,SAAAP,GAAO,OACH,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNtBO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,YAA7B,OACrB,uBACIb,UAAU,SACVc,KAAK,SACLH,YAAaA,EACbI,MAAOF,EACPG,SAAUJ,M,MC6BHK,MAjCf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNV,EADM,KACIW,EADJ,OAEyBD,mBAAS,IAFlC,mBAENL,EAFM,KAEOO,EAFP,OAG6BF,mBAAS,IAHtC,mBAGNG,EAHM,KAGSC,EAHT,KAwBb,OAnBAC,qBAAU,WACNC,MAAM,8CACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAQ,OAAIT,EAAYS,MAC7BC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,IAMLP,qBAAU,WACR,IAAMU,EAAUzB,EAAS0B,QAAO,SAAAhC,GAAO,OACrCA,EAAQG,KAAK8B,cAAcC,SAASvB,EAAYwB,wBAChDf,EAAiBW,KACnB,CAACpB,EAAYL,IAGb,sBAAKR,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAbxB,SAAA0B,GACnBlB,EAAekB,EAAMC,OAAOxB,QAY2CF,YAAaA,IAClF,cAAC,EAAD,CAAUL,SAAUa,QCrBXmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.174869b5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => ( \r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n        <h2>{ props.monster.name }</h2>\r\n        <p>{ props.monster.email }</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n <div className='card-list'>\r\n    {\r\n        props.monsters.map(\r\n            monster => (\r\n                <Card key={monster.id} monster={monster}/>\r\n            )\r\n        )\r\n    }\r\n   </div>\r\n)","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange, searchField}) => (\r\n    <input\r\n        className=\"search\" \r\n        type=\"search\" \r\n        placeholder={placeholder}\r\n        value={searchField} \r\n        onChange={handleChange} \r\n      />\r\n)","import React, {useEffect, useState} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\nimport './App.css';\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  \n  useEffect(() => {\n      fetch('https://jsonplaceholder.typicode.com/users')\n        .then(resp => resp.json())\n        .then(response => setMonsters(response))\n        .catch(err => {\n          console.log(err);\n        })\n    }, []);\n  \n  const handleChange = event => {\n    setSearchField(event.target.value);\n  } \n  \n  useEffect(() => {\n    const results = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n      setSearchResults(results);\n  },[searchField,monsters]);\n \n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox placeholder='search monsters' handleChange={handleChange} searchField={searchField}/>\n      <CardList monsters={searchResults}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}